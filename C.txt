-composer create-project laravel/laravel example-app

-composer require laravel/breeze

-php artisan breeze:install

-criar database

-conectar database .env

-php artisan migrate --seed

-npm install && npm run dev

-php artisan make:model Exemplo -m

-/migrations  

-/model  protected $fillable = ['name','email','adress','website'];	

-php artisan make:resource ExemploResource

-php artisan make:controller Api/ExemploController --api --resource --model=Exemplo

-/routes/api.php  Route::apiResource('exemplos' , \App\Http\Controllers\Api\ExemploController::class);

-/ExemploController  use App\Http\Resources\ExemploResource;

-/ExemploController   index   {  return ExemploResource::collection(Exemplo::all()); }

-php artisan make:request ExemploRequest

-/ExemploController use App\Http\Requests\ExemploRequest;

-/ExemploController   store(ExemploRequest $request)  { $exemplo = Exemplo::create($request->validated()); return new ExemploResource($exemplo); } 

-/ExemploRequest authorize() { return true; }

-/ExemploRequest rules() /*exemplo:*/ { 'name' => ['required'], 'email' => ['required', 'email'],'adress' =>['string'], 'website' => ['url']  }

-/ExemploController   show(Exemplo $exemplo) { return new ExemploResource($exemplo); }

-/ExemploController   update(ExemploRequest $request, Exemplo $exemplo) { $exemplo->update($request->validated()); return new ExemploResource($exemplo); }

-/ExemploController   destroy { $exemplo->delete(); return response()->noContent(); };

-php artisan migrate 

-npm install vue@next   vue-router@next  vue-loader@next

-/webpack      mix.js('resources/js/app.js', 'public/js').vue().postCss('resources/css/app.css', 'public/css', [

-/resources/views/dashbord.blade    <router-view />

-/resources/views/layouts/app.blade    <div class="min-h-screen bg-gray-100" id="app">

-criar em resources/js   components/exemplos ExemplosIndex.vue

-criar em resources/js   components/exemplos ExemplosEdit.vue

-criar em resources/js   components/exemplos ExemplosCreate.vue

-criar em resources/js  /composables composables.js

-criar em resources/js  /router  index.js





========================================================================

-/resources/js/app.js   

require('./bootstrap');

require('alpinejs');

import { createApp } from "vue";
import router from './router'
import ExemplosIndex from './components/exemplos/ExemplosIndex'

createApp({
    components: {
        ExemplosIndex
    }
}).use(router).mount('#app')

=======================================================================



=======================================================================
-\resources\js\router\index.js

import { createRouter, createWebHistory } from "vue-router";

import ExemplosIndex from '../components/exemplos/ExemplosIndex'
import ExemplosCreate from '../components/exemplos/ExemplosCreate'
import ExemplosEdit from '../components/exemplos/ExemplosEdit'

const routes = [
    {
        path: '/dashboard',
        name: 'exemplos.index',
        component: ExemplosIndex
    },
    {
        path: '/exemplos/create',
        name: 'exemplos.create',
        component: ExemplosCreate
    },
    {
        path: '/exemplos/:id/edit',
        name: 'exemplos.edit',
        component: ExemplosEdit,
        props: true
    }
    
]

export default createRouter({
    history: createWebHistory(),
    routes
})


========================================================================



========================================================================

-/resources/components/composables/composables.js

import { ref } from 'vue';

import axios from 'axios';

export default function useExemplos(){
    const exemplos = ref([])

    const getExemplos = async() => {
        let reponse = await axios.get('api/exemplos');
        exemplos.value = reponse.data.data;
    }

    return{
        exemplos,
        getExemplos
    }
}

=========================================================================



=========================================================================

-\resources\components\exemplos\ExemplosIndex.vue  


  <template>
    <div class="overflow-hidden overflow-x-auto min-w-full align-middle sm:rounded-md">
        <div class="flex place-content-end mb-4">
            <div class="px-4 py-2 text-white bg-indigo-600 hover:bg-indigo-700 cursor-pointer">
                <router-link :to="{ name: 'exemplos.create' }" class="text-sm font-medium">Create exemplo</router-link>
            </div>
        </div>

        <table class="min-w-full border divide-y divide-gray-200">
            <thead>
            <tr>
                <th class="px-6 py-3 bg-gray-50">
                    <span
                        class="text-xs font-medium tracking-wider leading-4 text-left text-gray-500 uppercase">Name</span>
                </th>
                <th class="px-6 py-3 bg-gray-50">
                    <span
                        class="text-xs font-medium tracking-wider leading-4 text-left text-gray-500 uppercase">Email</span>
                </th>
                <th class="px-6 py-3 bg-gray-50">
                    <span
                        class="text-xs font-medium tracking-wider leading-4 text-left text-gray-500 uppercase">Address</span>
                </th>
                <th class="px-6 py-3 bg-gray-50">
                    <span
                        class="text-xs font-medium tracking-wider leading-4 text-left text-gray-500 uppercase">Website</span>
                </th>
                <th class="px-6 py-3 bg-gray-50">
                </th>
            </tr>
            </thead>

            <tbody class="bg-white divide-y divide-gray-200 divide-solid">
            <template v-for="item in exemplos" :key="item.id">
                <tr class="bg-white">
                    <td class="px-6 py-4 text-sm leading-5 text-gray-900 whitespace-no-wrap">
                        {{ item.name }}
                    </td>
                    <td class="px-6 py-4 text-sm leading-5 text-gray-900 whitespace-no-wrap">
                        {{ item.email }}
                    </td>
                    <td class="px-6 py-4 text-sm leading-5 text-gray-900 whitespace-no-wrap">
                        {{ item.adress }}
                    </td>
                    <td class="px-6 py-4 text-sm leading-5 text-gray-900 whitespace-no-wrap">
                        {{ item.website }}
                    </td>
                    <td class="px-6 py-4 text-sm leading-5 text-gray-900 whitespace-no-wrap">

                        <router-link :to="{ name: 'exemplos.edit', params: { id: item.id } }"
                         class="mr-2 inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs 
                           text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 
                             focus:ring ring-gray-300 disabled:opacity-25 transition ease-in-out duration-150">

                              Edit</router-link>

                        <button @click="deleteExemplo(item.id)"
                          class="inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs 
                           text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900
                             focus:ring ring-gray-300 disabled:opacity-25 transition ease-in-out duration-150">

                              Delete</button>

                    </td>
                </tr>
            </template>
            </tbody>
        </table>
    </div>
</template>

<script>
import useExemplos from "../../composables/composables";
import { onMounted } from "vue";
export default {
    setup() {
        const { exemplos, getExemplos, destroyExemplo } = useExemplos()
        onMounted(getExemplos)
        const deleteExemplo = async (id) => {
            if (!window.confirm('Are you sure?')) {
                return
            }
            await destroyExemplo(id);
            await getExemplos();
        }
        return {
            exemplos,
            deleteExemplo
        }
    }
}
</script>



=========================================================================


=========================================================================

-\resources\components\exemplos\ExemplosEdit.vue

<template>
    <div v-if="errors">
      <div v-for="(v, k) in errors" :key="k" class="bg-red-500 text-white rounded font-bold mb-4 shadow-lg py-2 px-4 pr-0">
        <p v-for="error in v" :key="error" class="text-sm">
          {{ error }}
        </p>
      </div>
    </div>
    <form class="space-y-6" v-on:submit.prevent="saveExemplo">
        <div class="space-y-4 rounded-md shadow-sm">
            <div>
                <label for="name" class="block text-sm font-medium text-gray-700">Name</label>
                <div class="mt-1">
                    <input type="text" name="name" id="name"
                           class="block mt-1 w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
                           v-model="exemplo.name">
                </div>
            </div>

            <div>
                <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
                <div class="mt-1">
                    <input type="text" name="email" id="email"
                           class="block mt-1 w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
                           v-model="exemplo.email">
                </div>
            </div>

            <div>
                <label for="address" class="block text-sm font-medium text-gray-700">Address</label>
                <div class="mt-1">
                    <input type="text" name="address" id="address"
                           class="block mt-1 w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
                           v-model="exemplo.adress">
                </div>
            </div>

            <div>
                <label for="website" class="block text-sm font-medium text-gray-700">Website</label>
                <div class="mt-1">
                    <input type="text" name="website" id="website"
                           class="block mt-1 w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
                           v-model="exemplo.website">
                </div>
            </div>
        </div>

        <button type="submit"
                class="inline-flex items-center px-4 py-2 text-xs font-semibold tracking-widest text-white uppercase bg-gray-800 rounded-md border border-transparent ring-gray-300 transition duration-150 ease-in-out hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring disabled:opacity-25">
            Save
        </button>
    </form>
</template>

<script>
import useExemplos from "../../composables/composables";
import {onMounted} from "vue";
export default {
    props: {
        id: {
            required: true,
            type: String
        }
    },
    setup(props) {
        const { errors, exemplo, getExemplo, updateExemplo } = useExemplos()
        onMounted(getExemplo(props.id))
        const saveExemplo = async () => {
            await updateExemplo(props.id)
        }
        return {
            errors,
            exemplo,
            saveExemplo
        }
    }
}
</script>

=========================================================================


=========================================================================

-\resources\components\exemplos\ExemplosCreate.vue



=========================================================================


-npm run watch


